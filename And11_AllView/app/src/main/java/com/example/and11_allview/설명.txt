1. 리스트뷰
    안드로이드에서는 내용이 반복되는 것을
    리스트뷰, 그리드뷰, 리사이클러뷰 등의 뷰라는 것을 이용해서 보여준다.

    위젯이 중요한게 아니라 실제 데이터나 모양을 정의하는 ※"Adapter"※ 가 중요하다.

    Adapter :   리스트뷰 내부에 반복되는 모양이 각각 용도에 따라서 다르기 때문에 디자인을
                개발자가 커스텀하고 사용할 수 있는 구조를 만들 수 있게 해놓은것.

    리스트뷰는 영역을 차지하고 보여주는 행위만 담당 (↑)

    만드는 방법 :
        1-1 화면에 ListView 라는 위젯을 추가한다.
        1-2 ListView 에 들어가는 Adapter 라는 객체를 만들어낸다. ★★
            → Adapter 는 반드시 LayoutInflater 가 필요함 (칸마다 보여줄 레이아웃을 붙이는 처리를 위함)
        1-3 Adapter ↔ ListView 연결 (1차 완료)
        1-4 똑같은 모양 반복(X) → ArrayList 나 데이터 묶음을 이용해서 각각의 칸이 유의미한 데이터를 보여줄 수 있게한다.


2. 리사이클러뷰
    → 리스트뷰, 그리드뷰와 다르게 ViewHolder 라는 위젯을 묶어놓은 객체를 강제한다. (재활용)

    어댑터를 만드는 방법 :
        1.  Adapter 라는 것을 알아볼 수 있게(이름) 클래스를 만든다.
        2.  안쪽에 ViewHolder 라는 클래스를 만든다.
        3.  RecyclerViewAdapter 를 상속 받는다.
        4.  메소드 구현 부분 작성
        5.  RecyclerView ↔ Adapter 연결
        6.  RecyclerView ↔ LayoutManager 연결 (가로, 세로가 가능하기 때문)

        1.  Adapter 클래스 생성
        2.  Adapter 클래스 안쪽에 public class ViewHolder 클래스 생성
        3.  RecyclerView.ViewHolder 를 extends
        4.  생성한 ViewHolder 클래스로 Adapter 클래스 상속 (extends)
        5.  LayoutInflater 타입 변수 선언 후 생성자 생성
        6.  onCreateViewHolder 메소드에서 inflater 를 이용하여 Fragment 와 연결
            → View v = inflater[변수?].inflate[인플레이터의 메소드](파라미터 값 입력);
        7.  앞에 만든 ViewHolder 클래스의 객체 생성 후 인플레이터와 연결한 v값을 넣어준다?
            → ViewHolder viewHolder = new ViewHolder(v);
        8.  viewHolder 를 리턴한다.
        9.  Fragment 에서 inflater 로 fragment 를 원하는 곳에 붙이는 처리
            → View v = inflater.inflate(붙이려는 레이아웃[R.Id.Layout], 붙이려는 곳[container], false);
        10. 

